From 290bdb4e65d0297f1f2aa9af185137b8ab6c0d55 Mon Sep 17 00:00:00 2001
From: Stefano Pacifici <stefano.pacifici@gmail.com>
Date: Fri, 26 Jun 2020 16:18:32 +0200
Subject: Removing Collections (again)

---
 .../fenix/components/toolbar/DefaultToolbarMenu.kt        | 8 ++++++--
 .../fenix/home/sessioncontrol/SessionControlAdapter.kt    | 5 +++++
 .../fenix/home/sessioncontrol/SessionControlView.kt       | 5 +++++
 .../main/java/org/mozilla/fenix/tabtray/TabTrayView.kt    | 3 ++-
 app/src/main/res/menu/tab_tray_menu.xml                   | 3 ++-
 5 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt b/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
index 427ec0306..e33e8d453 100644
--- a/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
+++ b/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
@@ -158,15 +158,17 @@ class DefaultToolbarMenu(
 
     private val menuItems by lazy {
         // Predicates that are called once, during screen init
+        /* Ghostery Begin: remove collections +/
         val shouldShowSaveToCollection = (context.asActivity() as? HomeActivity)
             ?.browsingModeManager?.mode == BrowsingMode.Normal
+        /+ Ghostery End */
         val shouldDeleteDataOnQuit = Settings.getInstance(context)
             .shouldDeleteBrowsingDataOnQuit
 
         val menuItems = listOfNotNull(
             historyItem,
             bookmarksItem,
-            if (FeatureFlags.syncedTabs) syncedTabs else null,
+            // Ghostery - if (FeatureFlags.syncedTabs) syncedTabs else null,
             settings,
             if (shouldDeleteDataOnQuit) deleteDataOnQuit else null,
             BrowserMenuDivider(),
@@ -174,7 +176,7 @@ class DefaultToolbarMenu(
             addToTopSites,
             addToHomescreen.apply { visible = ::canAddToHomescreen },
             installToHomescreen.apply { visible = ::canInstall },
-            if (shouldShowSaveToCollection) saveToCollection else null,
+            // Ghostery: if (shouldShowSaveToCollection) saveToCollection else null,
             desktopMode,
             openInApp.apply { visible = ::shouldShowOpenInApp },
             readerAppearance.apply { visible = ::shouldShowReaderAppearance },
@@ -265,6 +267,7 @@ class DefaultToolbarMenu(
         onItemTapped.invoke(ToolbarMenu.Item.FindInPage)
     }
 
+    /* Ghostery Begin: remove collections +/
     private val saveToCollection = BrowserMenuImageText(
         label = context.getString(R.string.browser_menu_save_to_collection_2),
         imageResource = R.drawable.ic_tab_collection,
@@ -272,6 +275,7 @@ class DefaultToolbarMenu(
     ) {
         onItemTapped.invoke(ToolbarMenu.Item.SaveToCollection)
     }
+    /+ Ghostery End */
 
     private val deleteDataOnQuit = BrowserMenuImageText(
         label = context.getString(R.string.delete_browsing_data_on_quit_action),
diff --git a/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt b/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt
index d19f3c1af..c433ba5a3 100644
--- a/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt
+++ b/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt
@@ -43,6 +43,7 @@ sealed class AdapterItem(@LayoutRes val viewType: Int) {
     object PrivateBrowsingDescription : AdapterItem(PrivateBrowsingDescriptionViewHolder.LAYOUT_ID)
     object NoCollectionsMessage : AdapterItem(NoCollectionsMessageViewHolder.LAYOUT_ID)
 
+    /* Ghostery Begin: removing collections from home +/
     object CollectionHeader : AdapterItem(CollectionHeaderViewHolder.LAYOUT_ID)
     data class CollectionItem(
         val collection: TabCollection,
@@ -50,6 +51,8 @@ sealed class AdapterItem(@LayoutRes val viewType: Int) {
     ) : AdapterItem(CollectionViewHolder.LAYOUT_ID) {
         override fun sameAs(other: AdapterItem) = other is CollectionItem && collection.id == other.collection.id
     }
+    /+ Ghostery End */
+
     data class TabInCollectionItem(
         val collection: TabCollection,
         val tab: ComponentTab,
@@ -151,10 +154,12 @@ class SessionControlAdapter(
             is TopSiteViewHolder -> {
                 holder.bind((item as AdapterItem.TopSiteList).topSites)
             }
+            /* Ghostery Begin: removing collections +/
             is CollectionViewHolder -> {
                 val (collection, expanded) = item as AdapterItem.CollectionItem
                 holder.bindSession(collection, expanded)
             }
+            /+ Ghostery End */
             is TabInCollectionViewHolder -> {
                 val (collection, tab, isLastTab) = item as AdapterItem.TabInCollectionItem
                 holder.bindSession(collection, tab, isLastTab)
diff --git a/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt b/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt
index 41e4b1ad0..0679b8667 100644
--- a/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt
+++ b/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt
@@ -21,6 +21,7 @@ import org.mozilla.fenix.components.tips.Tip
 
 // This method got a little complex with the addition of the tab tray feature flag
 // When we remove the tabs from the home screen this will get much simpler again.
+@Suppress("UNUSED_PARAMETER")
 @SuppressWarnings("LongParameterList", "ComplexMethod")
 private fun normalModeAdapterItems(
     topSites: List<TopSite>,
@@ -36,16 +37,19 @@ private fun normalModeAdapterItems(
         items.add(AdapterItem.TopSiteList(topSites))
     }
 
+    /* Ghostery Begin: do not show collections +/
     if (collections.isEmpty()) {
         items.add(AdapterItem.CollectionHeader)
         items.add(AdapterItem.NoCollectionsMessage)
     } else {
         showCollections(collections, expandedCollections, items)
     }
+    /+ Ghostery End */
 
     return items
 }
 
+/* Ghostery Begin: do not show collections +/
 private fun showCollections(
     collections: List<TabCollection>,
     expandedCollections: Set<Long>,
@@ -62,6 +66,7 @@ private fun showCollections(
         }
     }
 }
+/+ Ghostery End */
 
 private fun privateModeAdapterItems() = listOf(AdapterItem.PrivateBrowsingDescription)
 
diff --git a/app/src/main/java/org/mozilla/fenix/tabtray/TabTrayView.kt b/app/src/main/java/org/mozilla/fenix/tabtray/TabTrayView.kt
index 0562f2fba..291857c4b 100644
--- a/app/src/main/java/org/mozilla/fenix/tabtray/TabTrayView.kt
+++ b/app/src/main/java/org/mozilla/fenix/tabtray/TabTrayView.kt
@@ -313,6 +313,7 @@ class TabTrayItemMenu(
 
     private val menuItems by lazy {
         listOf(
+            /* Ghostery Begin: removing save to collection from the tab tray menu +/
             SimpleBrowserMenuItem(
                 context.getString(R.string.tab_tray_menu_item_save),
                 textColorResource = R.color.primary_text_normal_theme
@@ -320,7 +321,7 @@ class TabTrayItemMenu(
                 context.components.analytics.metrics.track(Event.TabsTraySaveToCollectionPressed)
                 onItemTapped.invoke(Item.SaveToCollection)
             }.apply { visible = shouldShowSaveToCollection },
-
+            /+ Ghostery End */
             SimpleBrowserMenuItem(
                 context.getString(R.string.tab_tray_menu_item_share),
                 textColorResource = R.color.primary_text_normal_theme
diff --git a/app/src/main/res/menu/tab_tray_menu.xml b/app/src/main/res/menu/tab_tray_menu.xml
index 8eda6eea4..155daadc3 100644
--- a/app/src/main/res/menu/tab_tray_menu.xml
+++ b/app/src/main/res/menu/tab_tray_menu.xml
@@ -5,11 +5,12 @@
 <menu xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto">
 
-    <!-- Save to collection -->
+    <!-- Ghostery Begin: disabling "Save to collection" -+>
     <item
         android:id="@+id/tab_tray_select_to_save_menu_item"
         android:title="@string/tab_tray_menu_item_save"
         app:showAsAction="never" />
+    <-+ Ghostery End -->
 
     <!-- Share-->
     <item
-- 
2.25.1

